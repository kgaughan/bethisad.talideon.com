---
- name: deploy {{ domain_name }}
  hosts: all
  remote_user: keith
  become: true
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/local/bin/python

    # domain_name comes in from the invocation.
    vhosts_root: /usr/local/www
    webserver_config_root: /usr/local/etc/nginx
    tls_root: /usr/local/etc/ssl/acme
    logs_root: /var/logs/www
    commit_id: a7954c331a9d6f48d8da18a0317320ea2e9f13dd

  tasks:
    - name: install requirements
      pkgng:
        name: '{{ item }}'
        cached: true
      with_items:
        - py27-Genshi
        - py27-libxml2
        - py27-libxslt
        - py27-rdflib

    - name: ensure target directories exist
      file:
        dest: '{{ item }}'
        state: directory
      with_items:
        - '{{ vhosts_root }}/{{ domain_name }}/web'
        - '{{ vhosts_root }}/{{ domain_name }}/cache'
        - '{{ webserver_config_root }}/vhosts'
        - '{{ logs_root }}'

    - name: ensure venus's directories exist
      file:
        dest: '{{ item }}'
        state: directory
        owner: www
        group: www
      with_items:
        - '{{ vhosts_root }}/{{ domain_name }}/web'
        - '{{ vhosts_root }}/{{ domain_name }}/cache'

    - name: copy up vhost config
      template:
        src: vhost.conf.j2
        dest: '{{ webserver_config_root }}/vhosts'
      notify:
        - reload nginx

    - name: download and extract venus
      unarchive:
        src: 'https://github.com/kgaughan/venus/archive/{{ commit_id }}.zip'
        dest: '{{ vhosts_root }}/{{ domain_name }}'
        remote_src: true

    - name: symlink extracted version
      file:
        src: '{{ vhosts_root }}/{{ domain_name }}/venus-{{ commit_id }}'
        dest: '{{ vhosts_root }}/{{ domain_name }}/venus'
        state: link

    - name: copy up themes
      synchronize:
        src: themes
        dest: '{{ vhosts_root }}/{{ domain_name }}/'
        owner: false
        group: false
        delete: true

    - name: copy up venus config
      template:
        src: config.ini.j2
        dest: '{{ vhosts_root }}/{{ domain_name }}/config.ini'

    - name: configure cron job
      cron:
        name: 'run venus'
        special_time: daily
        user: www
        job: '(cd {{ vhosts_root }}/{{ domain_name }}; {{ ansible_python_interpreter }} venus/planet.py config.ini) >/dev/null 2>/dev/null'

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded
      when: false
